local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local TweenService = game:GetService("TweenService")

local Character = nil
local HumanoidRootPart = nil
local Humanoid = nil

local AutoGuardOn = false
local CurrentTarget = nil

-- GUI Setup
local Gui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))
Gui.Name = "AutoGuardGUI"

local ToggleButton = Instance.new("TextButton", Gui)
ToggleButton.Size = UDim2.new(0, 130, 0, 40)
ToggleButton.Position = UDim2.new(0, 10, 0, 10)
ToggleButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
ToggleButton.TextColor3 = Color3.new(1, 1, 1)
ToggleButton.Font = Enum.Font.SourceSansBold
ToggleButton.TextScaled = true
ToggleButton.Text = "AutoGuard: OFF"

-- Button Logic
ToggleButton.MouseButton1Click:Connect(function()
	AutoGuardOn = not AutoGuardOn
	ToggleButton.Text = "AutoGuard: " .. (AutoGuardOn and "ON" or "OFF")
	if not AutoGuardOn then
		CurrentTarget = nil
	end
end)

-- Get Closest Player
local function GetClosestPlayer()
	local closest = nil
	local minDist = math.huge
	for _, player in pairs(Players:GetPlayers()) do
		if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
			local dist = (player.Character.HumanoidRootPart.Position - HumanoidRootPart.Position).Magnitude
			if dist < minDist then
				minDist = dist
				closest = player
			end
		end
	end
	return closest
end

-- Update Character References
local function UpdateCharacter()
	Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
	HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
	Humanoid = Character:WaitForChild("Humanoid")
end

LocalPlayer.CharacterAdded:Connect(UpdateCharacter)
if LocalPlayer.Character then UpdateCharacter() end

-- Auto Guard Loop
RunService.RenderStepped:Connect(function()
	if AutoGuardOn and Character and HumanoidRootPart and Humanoid then
		if not CurrentTarget or not CurrentTarget.Character or not CurrentTarget.Character:FindFirstChild("HumanoidRootPart") then
			CurrentTarget = GetClosestPlayer()
		end

		if CurrentTarget and CurrentTarget.Character and CurrentTarget.Character:FindFirstChild("HumanoidRootPart") then
			local targetHRP = CurrentTarget.Character.HumanoidRootPart
			local forwardVec = targetHRP.CFrame.LookVector
			local targetPosition = targetHRP.Position + forwardVec * 5

			local moveDirection = (targetPosition - HumanoidRootPart.Position).Unit
			Humanoid:Move(moveDirection, false)
		end
	end
end)
